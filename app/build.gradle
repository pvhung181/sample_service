 plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
//    id 'com.google.gms.google-services'
//    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        applicationId "com.tapbi.spark.sampleService"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 1
        versionName "1.0"
        flavorDimensions "default"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        renderscriptTargetApi 29
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    productFlavors {
        product {
            dimension "default"
        }
        dev {
            dimension "default"
            applicationId = 'com.tapbi.spark.sampleService'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    namespace 'com.tapbi.spark.sampleService'

}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    /*Core*/
    implementation libraries.androidAppCopmpat
    implementation libraries.multidex
    implementation libraries.ktxCore
    /*UI*/
    implementation libraries.androidxNavigation
    implementation libraries.androidxNavigationKtx
    implementation libraries.androidUICommon
    implementation libraries.materialDesign
    implementation libraries.hilt
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.6'
    implementation 'androidx.activity:activity:1.8.0'
    kapt libraries.hiltKpt
    annotationProcessor libraries.hiltAP

    implementation libraries.glide
    annotationProcessor libraries.glideAP

    /*Firebase*/
    implementation platform("com.google.firebase:firebase-bom:$versions.firebaseVersion")
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    /*Database ( if use Room) */
    implementation libraries.room
    implementation libraries.roomRxjava
    implementation libraries.roomKpt
    kapt libraries.roomAP

    /*Other*/
    implementation libraries.coroutine
    implementation libraries.sdp

//    implementation libraries.rxJava
    implementation libraries.retrofitWithLogger
//    implementation libraries.retrofitRXjavaAdapter
    implementation libraries.timberLog
    implementation libraries.eventBus
    implementation libraries.lifeCycleKtx
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation libraries.paging

    /*Test*/
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation testLib
}